[app:main]
use: egg:h

api.endpoint: /api
api.key: 00000000-0000-0000-0000-000000000000

horus.allow_email_auth: True
horus.autologin: True
horus.require_activation: False

horus.login_redirect: /
horus.logout_redirect: /

endpoint: /
session.secret: 535510n_53cr37

multiauth.groupfinder: h.models.groupfinder
multiauth.policies: h.api h.models

#provider.twitter.consumer_key: JuIcyToFooSandWich35
#provider.twitter.consumer_secret: PBNJwith4ppl35aU6e1Sk1773RyUmmyB0mshiVA

pyramid.reload_all: True
pyramid.debug_all: True
pyramid.includes:
    h.testing
    deform_bootstrap
    pyramid_deform
#    pyramid_debugtoolbar
#    velruse.app
#    velruse.providers.twitter

pyramid_deform.template_search_path:
    h:templates/deform

sqlalchemy.url: sqlite:///test.db

webassets.base_dir: %(here)s/h
webassets.base_url: /assets
webassets.coffee_no_bare: True
webassets.debug: True
webassets.manifest: False

es.compatibility: pre-1.0.0
es.host: http://localhost:9200
es.index: annotator-test

[server:main]
use: egg:gunicorn
host: 0.0.0.0
port: 4000
#certfile: %(here)s/host.pem
forwarded_allow_ips: *
graceful_timeout: 0
worker_class: gevent

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, gunicorn.error, h, sqlalchemy

[handlers]
keys = console, error_file

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_gunicorn.error]
level = DEBUG
handlers = error_file
qualname = gunicorn.error

[logger_h]
level = DEBUG
handlers =
qualname = h

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine

[handler_console]
class = StreamHandler
args = (sys.stderr,)
formatter = generic

[handler_error_file]
class = FileHandler
args = ('/tmp/gunicorn.error.log',)
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
